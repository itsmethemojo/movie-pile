apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: movie-pile
spec:
  description: movie-pile
  params:
    - name: repo-url
      type: string
    - name: revision
      type: string
    - name: branch
      type: string
    - name: enable-notifications
      default: true
    - name: repo-slug
      default: itsmethemojo/movie-pile
    - name: status-context
      default: tekton-test
    - name: tekton-url
      type: string
    - name: lint-ruby-image
      type: string
      default: pipelinecomponents/rubocop
    - name: lint-javascript-image
      type: string
      default: node:14.14-stretch
  workspaces:
    - name: cloned_repo
  tasks:
    - name: set-pending-status
      params:
        - name: REPO_FULL_NAME
          value: $(params.repo-slug)
        - name: SHA
          value: $(params.revision)
        - name: DESCRIPTION
          value: "test pipeline started"
        - name: CONTEXT
          value: $(params.status-context)
        - name: STATE
          value: pending
        - name: TARGET_URL
          value: $(params.tekton-url)
      taskRef:
        Name: github-set-status
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: cloned_repo
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.revision)
    - name: lint-ruby
      runAfter: ["fetch-source"]
      taskRef:
        name: movie-pile-lint-ruby
      workspaces:
        - name: source
          workspace: cloned_repo
      params:
        - name: image
          value: $(params.lint-ruby-image)
    - name: lint-javascript
      runAfter: ["lint-ruby"]
      taskRef:
        name: movie-pile-lint-javascript
      workspaces:
        - name: source
          workspace: cloned_repo
      params:
        - name: image
          value: $(params.lint-javascript-image)
  finally:
    - name: set-failed-status
      when:
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
        - input: $(params.enable-notifications)
          operator: in
          values: ["true"]
      params:
        - name: REPO_FULL_NAME
          value: $(params.repo-slug)
        - name: SHA
          value: $(params.revision)
        - name: DESCRIPTION
          value: "a task failed"
        - name: CONTEXT
          value: $(params.status-context)
        - name: STATE
          value: failure
        - name: TARGET_URL
          value: $(params.tekton-url)
      taskRef:
        Name: github-set-status
    - name: set-success-status
      when:
        - input: $(tasks.status)
          operator: in
          values: ["Succeeded"]
        - input: $(params.enable-notifications)
          operator: in
          values: ["true"]
      params:
        - name: REPO_FULL_NAME
          value: $(params.repo-slug)
        - name: SHA
          value: $(params.revision)
        - name: DESCRIPTION
          value: "all tasks have succeeded"
        - name: CONTEXT
          value: $(params.status-context)
        - name: STATE
          value: success
        - name: TARGET_URL
          value: $(params.tekton-url)
      taskRef:
        Name: github-set-status